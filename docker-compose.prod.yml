services:
  app:
    image: ghcr.io/maximedan/patrigma:latest
    depends_on:
      patrigma_db:
        condition: service_healthy
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - NODE_ENV=${NODE_ENV}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - BASE_URL=${BASE_URL}
      - NEXT_PUBLIC_BASE_URL=${BASE_URL}
    ports:
      - "3000:3000"
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
      - "traefik.enable=true"
      - "traefik.http.routers.next-prod.rule=Host(`patrigma.code-with-alex.com`)"
      - "traefik.http.routers.next-prod.entrypoints=websecure"
      - "traefik.http.routers.next-prod.tls.certresolver=myresolver"
      - "traefik.http.services.next-prod.loadbalancer.server.port=3000"
      - "traefik.docker.network=internet"
    networks:
      - internet
    volumes:
      - "./src:/patrigma/src"

  patrigma_db:
    image: postgres:latest
    container_name: patrigma_db
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: patrigma_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U postgres -d patrigma_db -h localhost -p 5432",
        ]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  internet:
    external: true
    name: custom_frontend

volumes:
  postgres_data:

services:

  # traefik:
  #     image: "traefik:v2.10"
  #     container_name: "traefik"
  #     command:
  #       - "--log.level=DEBUG"
  #       - "${TRAEFIK_API_OPTION}"
  #       - "--providers.docker=true"
  #       - "--providers.docker.exposedbydefault=false"
  #       - "--entrypoints.web.address=:80"
  #     ports:
  #       - "80:80"
  #       - "8080:8080"
  #     volumes:
  #       - "/var/run/docker.sock:/var/run/docker.sock:ro"

  # whoami:
  #   image: "traefik/whoami"
  #   container_name: "simple-service"
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.whoami.rule=Host(`whoami.localhost`)"
  #     - "traefik.http.routers.whoami.entrypoints=web"

  db:
    image: postgres:latest
    container_name: patrigma_db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: patrigma
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: patrigma_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U patrigma -d patrigma_db -h localhost -p 5432"]
      interval: 10s
      timeout: 5s
      retries: 5

  next:
    build:
      context: .
      target: next
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - NODE_ENV=${NODE_ENV}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - NEXT_PUBLIC_BASE_URL=${BASE_URL}
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - "./src:/patrigma/src"
    command: ["npm", "run", "start"]

volumes:
  postgres_data:

